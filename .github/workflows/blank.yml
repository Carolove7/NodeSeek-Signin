name: nodeseek鸡腿签到

on:
  push:
    branches:
      - main
  schedule:
    # 每天 UTC 时间 16 点的 1-30 分钟内每分钟触发一次 (对应北京时间 00:01-00:30)
    - cron: '1-30 16 * * *'
  workflow_dispatch:

permissions:
  contents: read
  actions: write  # 添加写入Actions变量的权限

jobs:
  run-nodeseek-sign:
    runs-on: ubuntu-latest

    steps:
      - name: 检出代码仓库
        uses: actions/checkout@v3
      
      - name: 配置Python环境
        uses: actions/setup-python@v2
        with:
          python-version: '3.11.8'

      - name: 安装依赖包
        run: |
          pip install curl_cffi requests
          
      - name: 计算随机延迟
        id: random_delay # 为此步骤添加ID以便引用其输出
        run: |
          # 生成一个 0 到 1799 秒 (即 0 到 29 分 59 秒) 之间的随机延迟秒数
          # 由于 cron 已经限定在 1-30 分钟内触发，这里随机延迟的范围可以更窄
          RANDOM_SECONDS=$(( RANDOM % 1800 )) # 1800 秒 = 30 分钟
          echo "::notice 🤖 将在签到前延迟 ${RANDOM_SECONDS} 秒..."
          # 将随机秒数设置为步骤的输出，以便后续步骤使用
          echo "DELAY_SECONDS=${RANDOM_SECONDS}" >> $GITHUB_OUTPUT

      - name: 随机延迟
        # 使用上一步骤计算出的延迟秒数进行休眠
        run: sleep ${{ steps.random_delay.outputs.DELAY_SECONDS }}
        
      - name: 运行签到脚本
        env:
          # 基本账号
          USER: ${{ secrets.USER }}
          PASS: ${{ secrets.PASS }}
          
          # 额外账号1-5
          USER1: ${{ secrets.USER1 }}
          PASS1: ${{ secrets.PASS1 }}
          USER2: ${{ secrets.USER2 }}
          PASS2: ${{ secrets.PASS2 }}
          USER3: ${{ secrets.USER3 }}
          PASS3: ${{ secrets.PASS3 }}
          USER4: ${{ secrets.USER4 }}
          PASS4: ${{ secrets.PASS4 }}
          USER5: ${{ secrets.USER5 }}
          PASS5: ${{ secrets.PASS5 }}
          
          # Cookie配置
          NS_COOKIE: ${{ vars.NS_COOKIE || secrets.NS_COOKIE }}
          
          # 验证码配置
          SOLVER_TYPE: ${{ secrets.SOLVER_TYPE }}
          API_BASE_URL: ${{ secrets.API_BASE_URL }}
          CLIENTT_KEY: ${{ secrets.CLIENTT_KEY }}
          
          # GitHub API配置
          GH_PAT: ${{ secrets.GH_PAT }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          
          # 通知推送配置
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_USER_ID: ${{ secrets.TG_USER_ID }}
          TG_THREAD_ID: ${{ secrets.TG_THREAD_ID }}
        run: python nodeseek_sign.py
